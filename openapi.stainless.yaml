# yaml-language-server: $schema=https://app.stainlessapi.com/config.schema.json

organization:
  name: Embed
  docs: https://docs.useembed.com
  contact: support@useembed.com

resources:
  integrations:
    methods:
      create: post /integrations
      list: get /integrations
      retrieve: get /integrations/{integration_id}
      update: put /integrations/{integration_id}
      delete: delete /integrations/{integration_id}
      enable: post /integrations/{integration_id}/enable
      disable: post /integrations/{integration_id}/disable
    models:
      integration: IntegrationObject
  connections:
    methods:
      list: get /connections
      upsert: post /connections
      retrieve: get /connections/{connection_id}
      update: put /connections/{connection_id}
      delete: delete /connections/{connection_id}
    models:
      connection: ConnectionObject
  session_tokens:
    methods:
      create: post /session-tokens
      list: get /session-tokens
      retrieve: get /session-tokens/{token}
      delete: delete /session-tokens/{token}
    models:
      session_token: SessionTokenObject
  providers:
    methods:
      list: get /providers
      retrieve: get /providers/{provider_key}
    models:
      provider: ProviderObject
  collections:
    methods:
      list: get /collections
      retrieve: get /collections/{collection_key}
      update: put /collections/{collection_key}
      enable: post /collections/{collection_key}/enable
      disable: post /collections/{collection_key}/disable
      query: post /collections/{collection_key}/query
    subresources:
      schemas:
        methods:
          list: get /collections/schemas
          retrieve: get /collections/{collection_key}/schema
        models:
          collection_schema: CollectionSchema
    models:
      collection: CollectionObject
  syncs:
    methods:
      list: get /syncs
      retrieve: get /syncs/{collection_key}
      update: put /syncs/{collection_key}
      start: post /syncs/{collection_key}/start
      stop: post /syncs/{collection_key}/stop
      trigger: post /syncs/{collection_key}/trigger
    subresources:
      runs:
        methods:
          list: get /syncs/{collection_key}/runs
          retrieve: get /syncs/{collection_key}/runs/{run_id}
        models:
          sync_run: SyncRunObject
    models:
      sync: SyncObject
  actions:
    methods:
      list: get /actions
      retrieve: get /actions/{action_key}
      trigger: post /actions/{action_key}/trigger
      enable: post /actions/{action_key}/enable
      disable: post /actions/{action_key}/disable
      schema: get /actions/{action_key}/schema
    subresources:
      schemas:
        methods:
          list: get /actions/schemas
          retrieve: get /actions/{action_key}/schema
        models:
          action_schema: ActionSchema
    models:
      action: ActionObject
  proxy:
    methods:
      get: get /proxy/{endpoint}
      post: post /proxy/{endpoint}
      put: put /proxy/{endpoint}
      delete: delete /proxy/{endpoint}
  webhooks:
    methods:
      create: post /webhooks
      list: get /webhooks
      retrieve: get /webhooks/{webhook_id}
      update: put /webhooks/{webhook_id}
      delete: delete /webhooks/{webhook_id}
      enable: post /webhooks/{webhook_id}/enable
      disable: post /webhooks/{webhook_id}/disable
    subresources:
      events:
        methods:
          list: get /webhooks/{webhook_id}/events
          retrieve: get /webhooks/{webhook_id}/events/{event_id}
        models:
          webhookEventObject: WebhookEventObject
    models:
      webhook: WebhookObject
targets:
  node:
    package_name: "@embedhq/node"
    production_repo: "embedhq/embed-node"
    publish:
      npm: false
    skip: false
  python:
    package_name: "embedhq"
    production_repo: "embedhq/embed-python"
    publish:
      pypi: false
settings:
  license: Apache-2.0
client_settings:
  opts:
    api_key:
      type: string
      auth:
        security_scheme: ApiKeyAuth
      read_env: EMBED_API_KEY
environments:
  production: https://api.useembed.com/v1
query_settings:
  nested_format: brackets
  array_format: comma
readme:
  example_requests:
    default:
      type: request
      endpoint: post /integrations
      params: &ref_0 {}
    headline:
      type: request
      endpoint: post /integrations
      params: *ref_0
